generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model product {
  id          Int      @id @default(autoincrement())
  name        String
  slug        String   @unique
  description String?
  dosage      String?
  category    String?
  
  baseCost     Decimal  @db.Decimal(10, 2)
  shippingCost Decimal  @db.Decimal(10, 2)
  markupAmount Decimal  @db.Decimal(10, 2)
  salePrice    Decimal  @db.Decimal(10, 2)
  
  inStock       Boolean @default(true)
  stockQuantity Int     @default(0)
  
  supplierId           Int?
  supplier             supplier? @relation(fields: [supplierId], references: [id])
  supplierProductCode  String?
  
  imageUrl     String?
  imageAltText String?
  
  metaTitle       String?
  metaDescription String?
  
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  orderItems orderItem[]
  
  @@index([slug])
  @@index([category])
  @@map("product")
}

model supplier {
  id              Int      @id @default(autoincrement())
  name            String   @unique
  displayName     String?
  telegramHandle  String?
  telegramGroupId String?
  contactMethod   String?
  
  shippingFrom     String?
  avgShippingDays  Int?
  shippingCostBase Decimal? @db.Decimal(10, 2)
  
  rating            Decimal? @db.Decimal(3, 2)
  totalOrders       Int      @default(0)
  successfulOrders  Int      @default(0)
  
  paymentMethod  String?
  paymentAddress String?
  
  notes    String?
  isActive Boolean  @default(true)
  createdAt DateTime @default(now())
  
  products       product[]
  orders         order[]
  supplierPrices supplierPrice[]
  
  @@map("supplier")
}

model order {
  id          Int      @id @default(autoincrement())
  orderNumber String   @unique
  
  customerEmail   String
  customerName    String?
  shippingAddress String
  shippingCity    String
  shippingState   String?
  shippingZip     String
  shippingCountry String @default("US")
  
  subtotal        Decimal @db.Decimal(10, 2)
  shippingCharged Decimal @db.Decimal(10, 2)
  tax             Decimal @db.Decimal(10, 2)
  total           Decimal @db.Decimal(10, 2)
  totalCost       Decimal @db.Decimal(10, 2)
  profit          Decimal @db.Decimal(10, 2)
  
  paymentMethod    String?
  paymentStatus    String  @default("pending")
  
  orderStatus      String   @default("received")
  supplierId       Int?
  supplier         supplier? @relation(fields: [supplierId], references: [id])
  supplierOrderId  String?
  trackingNumber   String?
  
  orderedAt   DateTime  @default(now())
  paidAt      DateTime?
  shippedAt   DateTime?
  deliveredAt DateTime?
  
  orderItems orderItem[]
  
  @@index([orderNumber])
  @@index([customerEmail])
  @@index([orderStatus])
  @@map("order")
}

model orderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  order     order   @relation(fields: [orderId], references: [id])
  productId Int
  product   product @relation(fields: [productId], references: [id])
  
  quantity       Int
  unitPrice      Decimal @db.Decimal(10, 2)
  unitCost       Decimal @db.Decimal(10, 2)
  productName    String
  productDosage  String?
  
  @@index([orderId])
  @@map("orderItem")
}

model supplierPrice {
  id         Int      @id @default(autoincrement())
  supplierId Int
  supplier   supplier @relation(fields: [supplierId], references: [id])
  
  productName        String
  price              Decimal  @db.Decimal(10, 2)
  shippingCost       Decimal  @db.Decimal(10, 2)
  sourceType         String?
  telegramMessageId  String?
  notes              String?
  timestamp          DateTime @default(now())
  
  @@index([supplierId, timestamp])
  @@index([productName])
  @@map("supplierPrice")
}